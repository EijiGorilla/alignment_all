"use strict";(self.webpackChunkalignment_all=self.webpackChunkalignment_all||[]).push([[623],{20623:(e,t,a)=>{a.r(t),a.d(t,{execute:()=>r});var s=a(50076);function r(e,t){let a=t.responseType;a?"array-buffer"!==a&&"blob"!==a&&"json"!==a&&"native"!==a&&"native-request-init"!==a&&"text"!==a&&(a="text"):a="json",t.responseType=a;const r=t.signal;return delete t.signal,globalThis.invokeStaticMessage("request",{url:e,options:t},{signal:r}).then((async n=>{let l,i,o,u,c;if(n.data)if(n.data instanceof ArrayBuffer){if(!("json"!==a&&"text"!==a&&"blob"!==a||(l=new Blob([n.data]),"json"!==a&&"text"!==a||(u=await l.text(),"json"!==a)))){try{i=JSON.parse(u||null)}catch(b){const a={...b,url:e,requestOptions:t};throw new s.A("request:server",b.message,a)}if(i.error){const a={...i.error,url:e,requestOptions:t};throw new s.A("request:server",i.error.message,a)}}}else"native"===a&&(n.data.signal=r,o=await fetch(n.data.url,n.data),n.httpStatus=o.status);switch(a){case"blob":c=l;break;case"json":c=i;break;case"native":c=o;break;case"text":c=u;break;default:c=n.data}return{data:c,httpStatus:n.httpStatus,requestOptions:t,ssl:n.ssl,url:e}}))}}}]);
//# sourceMappingURL=623.fff96a32.chunk.js.map